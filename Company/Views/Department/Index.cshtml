@model IEnumerable<Company.Models.Department>


@*

<!-- ✅ **ربط ملف CSS الأساسي** -->
<link rel="stylesheet" href="~/lib/twitter-bootstrap/css/stylesheet.css" asp-append-version="true" />
 *@
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<!-- إضافة CSS الخاص بـ DataTables -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">

<!-- إضافة جافا سكربت الخاص بـ DataTables -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
<style>
    .custom-table thead {
        background-color: #f8f9aa;
        color: #333;
        font-weight: bold;
    }

    .custom-table tbody tr:nth-child(even) {
        background-color: #f2b6fc; /* صفوف بلون هادئ */
    }

    .custom-table tbody tr:hover {
        background-color: #d8eaff; /* عند التمرير على الصف */
    }

    .department-name {
        font-weight: 600;
        color: #2c3e50;
    }

    .employee-card {
        background-color: #eaf2ff;
        padding: 5px 10px;
        margin: 2px;
        border-radius: 8px;
        display: inline-block;
    }

    .employee-name {
        font-weight: bold;
    }

    .role-manager {
        color: #0d6efd;
        font-size: 0.9em;
        margin-left: 5px;
    }

    .role-member {
        color: #6c757d;
        font-size: 0.9em;
        margin-left: 5px;
    }

    .custom-table {
        background-color: #ff9fff; /* لون الخلفية الأساسي للجدول */
        border: 2px solid #228b22; /* لون الإطار */
        border-radius: 22px; /* حواف ناعمة */
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05); /* ظل خفيف للنعومة */
    }


    .btn-edit {
        color: #fff;
        background-color: #ffc107;
        border: none;
    }

    .btn-delete {
        color: #fff;
        background-color: #dc3545;
        border: none;
    }

    .btn-add {
        font-weight: bold;
        border-radius: 25px;
        padding: 10px 20px;
    }

    .title-glow {
        font-weight: bold;
        color: #0d6efd;
        text-shadow: 0 0 10px #b3d1ff;
    }

</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div id="departmentindex" class="container mt-4">
    <h1 class="text-center title-glow">📂 Departments</h1>

    <div class="text-center mb-3">
        <a v-on:click="CreateItem()" class="btn btn-outline-primary btn-add">
            <i class="fas fa-plus"></i> Add New Department
        </a>
    </div>

    <div class="table-responsive">
        <table id="department-table" class="table custom-table shadow-lg">
            <thead>
                <tr>
                    <th>Name of Department</th>
                    <th>Description</th>
                    <th>Employees</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(itemdepartment, index) in department" :key="index" class="department-row">
                    <td class="department-name">{{itemdepartment.name}}</td>
                    <td class="department-description">{{itemdepartment.description}}</td>
                    <td class="employee-container">
                        <div class="employee-list">
                            <div v-for="(itemEmployee, employeeIndex) in itemdepartment.employees" :key="employeeIndex" class="employee-card">
                                <span class="employee-name">{{itemEmployee.name}}</span>
                                <span class="employee-role" :class="itemEmployee.isManger ? 'role-manager' : 'role-member'">
                                    {{ itemEmployee.isManger ? 'Manager' : 'Member' }}
                                </span>
                            </div>
                        </div>
                    </td>
                    <td>

                        <button v-on:click="EditItem(itemdepartment.id)" class="btn btn-edit btn-light">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button v-on:click="deleteItem(itemdepartment.id)" class="btn btn-delete btn-danger">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


<script type="text/javascript">
    var department_App = new Vue({
        el: "#departmentindex",
        data: {
            department: [],
        },
        methods: {
            async load() {
                try {
                    const response = await axios.get('/Department/GetAll');
                    console.log(response.data);
                    this.department = response.data;
                    this.$nextTick(function () {
                        $('#department-table').DataTable();
                    });
                } catch (error) {
                    console.error("Error loading departments:", error);
                }
            },
            CreateItem() {
                window.location.href = `/Department/Create`;

            },
            EditItem(id) {
                console.log(id);
                window.location.href = `/Department/Edit/${id}`;
            },
            deleteItem(id) {
                Swal.fire({
                    title: "Do you want to delete this item?",
                    showCancelButton: true,
                    confirmButtonText: "yes delete",
                    denyButtonText: "no keep"
                }).then((result) => {
                    if (result.isConfirmed) {
                        axios.delete(`/Department/Delete/${id}`)
                            .then(response => {
                                Swal.fire("deleted!", "", "success");
                                this.load();
                            })
                            .catch(error => {
                                console.error('Error deleting item:', error);
                            });
                    }
                });
            }

        },
        beforeMount() {
            this.load();
        },
    });
</script>



